<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IElementParameter
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.net.URLEncoder
" 
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
   	String cid = "";
   	IElementParameter param = node.getElementParameter("LABEL");
   	if(param != null && !"__UNIQUE_NAME__".equals(param.getValue())){
   		cid = (String)param.getValue();	
   	}else{
   		cid = node.getUniqueName();
   	}
	
	String url = ElementParameterParser.getValue(node,"__ADDRESS__").trim();
	String serviceType = ElementParameterParser.getValue(node, "__SERVICE_TYPE__");
	
	StringBuilder sb = new StringBuilder();
	sb.append("\"cxf://");
	sb.append(url);
	sb.append("?");
	
	sb.append(serviceType);
	sb.append("=");
	if("wsdlURL".equals(serviceType)){
		sb.append("file:///");
		String filePath = ElementParameterParser.getValue(node, "__WSDL_FILE__");
		if(filePath.startsWith("\"")){
			filePath = filePath.substring(1);
		}
		if(filePath.endsWith("\"")){
			filePath = filePath.substring(0,filePath.length()-1);
		}
		filePath.replaceAll("\\\\","/");
		try{
			sb.append(URLEncoder.encode(filePath,"UTF-8"));
		}catch(Exception e){
			sb.append(filePath);
		}
	}else {
		sb.append(ElementParameterParser.getValue(node, "__SERVICE_CLASS__"));
	}
	
	sb.append("&");
	String dataformat = ElementParameterParser.getValue(node, "__DATAFORMAT__");
	sb.append("dataFormat=");
	sb.append(dataformat);
	
	String specifyService = ElementParameterParser.getValue(node, "__SPECIFY_SERVICE__");
	if("true".equals(specifyService)){
		sb.append("&serviceName=");
		sb.append(ElementParameterParser.getValue(node, "__SERVICE_NAME__").trim());
		sb.append("&portName=");
		sb.append(ElementParameterParser.getValue(node, "__PORT_NAME__").trim());
	}
	
	List<Map<String, String>> tableValues = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node,
            "__ADVARGUMENTS__");
    for (Map<String, String> map : tableValues) {
        String argName = map.get("NAME").trim();
        String argValue = map.get("VALUE").trim();
        if (argName.startsWith("\"")) {
            argName = argName.substring(1);
        }
        if (argName.endsWith("\"")) {
            argName = argName.substring(0, argName.length() - 1);
        }
        if (argValue.startsWith("\"")) {
            argValue = argValue.substring(1);
        }
        if (argValue.endsWith("\"")) {
            argValue = argValue.substring(0, argValue.length() - 1);
        }
        try{
			argValue = URLEncoder.encode(argValue,"UTF-8");
			sb.append("&" + argName + "=" + argValue);
		}catch(Exception e){
			sb.append("&" + argName + "=" + argValue);
		}
    }
	
	sb.append("\"");
	
	url = sb.toString();
	
	String uriRef = "uriMap.get(\"" + cid + "\")";
	List< ? extends IConnection> conns = node.getIncomingConnections();
	if(conns.size()>0) {
%>
		.to(<%=uriRef%>)
<%
	} else {
%>
		from(<%=uriRef%>)
<%
	}
%>
