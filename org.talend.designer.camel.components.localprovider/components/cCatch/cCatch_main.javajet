<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
	java.util.Map
" 
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String previous_node="";
	String link_label="";
	
	if(node.getIncomingConnections()!=null && node.getIncomingConnections().size()>0) {
		previous_node = node.getIncomingConnections().get(0).getSource().getUniqueName();
		link_label = node.getIncomingConnections().get(0).getName();
	}

	
	List< ? extends IConnection> conns = node.getIncomingConnections();
	
	List<Map<String, String>> exceptions = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__EXCEPTIONS__");

	
	if(conns.size()>0) {
		if(previous_node.contains("cTry") && "Catch".equals(link_label)) {
%>
			.doCatch(
<%
				boolean isFirstException = true;
				if(exceptions.size()>0) {
					for(Map<String, String> anException : exceptions) {
						if(!isFirstException) {
%>
							,
<%
						}
						isFirstException=false;
%>
						<%=anException.get("EXCEPTION")%>.class
<%
					}
				}
%>
			)
<%
		}
	}
%>
