<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.MetadataTalendType    
    org.talend.core.model.metadata.MappingTypeRetriever	
    java.util.List
    java.util.ArrayList
    java.util.Map
    java.util.HashMap
" 
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	Integer messageCount=10;
	if(!("".equals(ElementParameterParser.getValue(node, "__MESSAGE_COUNT__"))))
		 messageCount = Integer.parseInt(ElementParameterParser.getValue(node, "__MESSAGE_COUNT__"));
		
	Integer timePeriod = 1000;
	if(!("".equals(ElementParameterParser.getValue(node, "__TIME_PERIOD__"))))
		timePeriod = Integer.parseInt(ElementParameterParser.getValue(node, "__TIME_PERIOD__"));
	
	String setTimePeriod = ElementParameterParser.getValue(node, "__SET_TIME_PERIOD__");
	String useAsyncDelaying = ElementParameterParser.getValue(node, "__USE_ASYNC_DELAYING__");
	
	if(messageCount!=null) {
%>
		.throttle(<%=messageCount%>)
<%
	}
	if("true".equals(setTimePeriod)) {
%>
		.timePeriodMillis(<%=timePeriod%>)
<%
	}
	if("true".equals(useAsyncDelaying)) {
%>
		.asyncDelayed()
<%
	}
%>
