<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.apache.camel.component.hawtdb.HawtDBAggregationRepository" id="repo1">
        <property name="recoveryInterval" value="5000"/>
        <property name="maximumRedeliveries" value="4"/>
        <property name="deadLetterUri" value="&quot;mock:dead&quot;"/>
        <property name="persistentFileName" value="&quot;data/repo.dat&quot;"/>
    </bean>
    <camelContext xmlns="http://camel.apache.org/schema/spring" id="camel-1">
        <route>
            <from uri=""/>
            <aggregate completionFromBatchConsumer="false" eagerCheckCompletion="false" groupExchanges="false" ignoreInvalidCorrelationKeys="false">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>
            </aggregate>
            <aggregate aggregationRepositoryRef="repo1" completionFromBatchConsumer="false" eagerCheckCompletion="false" groupExchanges="false" ignoreInvalidCorrelationKeys="false">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>
                <to uri="Transform[simple{The result is: ${body}}]"/>
                <to uri="stream:out"/>
            </aggregate>
            <wireTap copy="false" uri="direct:incoming">
                <body>
                    <xpath>""</xpath>
                </body>
            </wireTap>
            <to uri=""/>
        </route>
    </camelContext>
</beans>
