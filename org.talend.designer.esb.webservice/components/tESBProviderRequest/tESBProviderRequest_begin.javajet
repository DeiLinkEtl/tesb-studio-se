<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String projectName = codeGenArgument.getCurrentProjectName();
	String processName = node.getProcess().getName();

	boolean isOneWay = (node.getProcess().getNodesOfType("tESBProviderFault").isEmpty()
		&& node.getProcess().getNodesOfType("tESBProviderResponse").isEmpty());
%>
//*** ESB context initialization
	final String endpointUrl = <%=ElementParameterParser.getValue(node, "__ESB_ENDPOINT__")%>;
//*** ESB context initialization finish

<%@ include file="tESBProvider.javajet" %>

//*** external processor(s) initialization
	ESBProviderCallback providerCallback;
	HandlerThread_<%=cid%> handlerThread_<%=cid%> = null; 
	if (null == callback) {
		final QueuedMessageHandlerImpl<org.dom4j.Document> handler =
			new QueuedMessageHandlerImpl<org.dom4j.Document>(); 
		handlerThread_<%=cid%> =
			new HandlerThread_<%=cid%>(handler, "<%=projectName%>_<%=processName%>");
		handlerThread_<%=cid%>.start();
		providerCallback = handler;
	} else {
		providerCallback = callback;
	}

	globalMap.put("esbHandler", providerCallback);
//*** external processor(s) initialization finish

int nb_line_<%=cid%> = 0;

System.out.println(<%=ElementParameterParser.getValue(node, "__ESB_ENDPOINT__")%>);
System.out.println(<%=ElementParameterParser.getValue(node,"__ENDPOINT__")%>); 

System.out.println("<%=ElementParameterParser.getValue(node,"__SERVICE_NS__")%>");
System.out.println("<%=ElementParameterParser.getValue(node,"__SERVICE_NAME__")%>");
System.out.println("<%=ElementParameterParser.getValue(node,"__PORT_NS__")%>");
System.out.println("<%=ElementParameterParser.getValue(node,"__PORT_NAME__")%>");

System.out.println("<%=ElementParameterParser.getValue(node,"__METHOD__")%>"); 

try {
	// This is a beginning of the ESB provider request component cycle
	while(true) {
		try {

